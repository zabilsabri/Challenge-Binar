openapi: '3.0.2'
info:
  title: Challenge 5 Documentation
  version: '1.0'
servers:
  - url: http://localhost:3000/v1
tags:
  - name: Users
    description: Endpoint yang berhubungan dengan user
  - name: Account
    description: Endpoint yang berhubungan dengan akun
  - name: Transaction
    description: Endpoint yang berhubungan dengan transaksi
  - name: Auth
    description: Endpoint yang berhubungan dengan autentikasi
components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT    # optional, arbitrary value for documentation purposes
security:
  - bearerAuth: []  
paths:
  /users:
    get:
      summary: Get all users
      tags: ["Users"]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        email:
                          type: string
  /user:
    post:
      summary: Create a new user
      tags: ["Users"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  example: johndoe@gmail.com
                password:
                  type: string
                  example: password
                identity_type:
                  type: string
                  example: KTP
                identity_number:
                  type: string
                  example: 1234567890
                address:
                  type: string
                  example: Jl. Jend. Sudirman No. 1
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Successfully insert data for John Doe
                  data:
                    type: integer
                    example: 1
        '400':
          description: Duplicate Email / Invalid Arguments
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Email already exists || All fields are required
  /user/{id}:
    get:
      summary: Get a user by ID
      tags: ["Users"]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: John Doe
                      email:
                        type: string
                        example: johndoe@gmail.com
                      password:
                        type: integer
                        example: password
                      profiles:
                        type: object
                        properties:
                          identity_type:
                            type: string
                            example: KTP
                          identity_number:
                            type: string
                            example: 1234567890
                          address:
                            type: string
                            example: Jl. Jend. Sudirman No. 1
        '404':
          description: User Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: User not found
  /accounts:
    get:
      summary: Get account information
      tags: ["Account"]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      bank_name:
                        type: string
                        example: BCA
                      balance:
                        type: integer
                        example: 1000000
                      user_id:
                        type: integer
                        example: 1
  /account:
    post:
      summary: Create a new account
      tags: ["Account"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                bank_name:
                  type: string
                  example: BCA
                bank_account_number:
                  type: string
                  example: 12345678
                balance:
                  type: integer
                  example: 1000000
                user_id:
                  type: integer
                  example: 1
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Successfully insert data for BCA
                  data:
                    type: integer
                    example: 1
        '400':
          description: Duplicate Account Number / Invalid Arguments
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Bank Account already exist || All fields are required
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: User not found
  /account/{id}:
    get:
      summary: Get account information by ID
      tags: ["Account"]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      bank_name:
                        type: string
                        example: BCA
                      bank_account_number:
                        type: string
                        example: 12345678
                      balance:
                        type: integer
                        example: 1000000
                      user_id:
                        type: integer
                        example: 1
        '404':
          description: Account Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Account not found
  /transactions:
    get:
      summary: Get all transactions
      tags: ["Transaction"]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        amount:
                          type: integer
                          example: 100000
                        source_account_id:
                          type: string
                          example: 1
                        destination_account_id:
                          type: integer
                          example: 2
  /transaction:
    post:
      summary: Create a new transaction
      tags: ["Transaction"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  type: integer
                  example: 200000
                bank_account_source:
                  type: string
                  example: 1
                bank_account_destination:
                  type: string
                  example: 2
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Successfully insert data for transaction
                  data:
                    type: integer
                    example: 1
        '400':
          description: Arguments are invalid
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: All fields are required
        '404':
          description: Bank account not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Bank account source not found || Bank account destination not found
  /transaction/{id}:
    get:
      summary: Get transaction by ID
      tags: ["Transaction"]
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      status:
                        type: string
                        example: success
                      data:
                        type: object
                        properties:
                          amount:
                            type: integer
                            example: 100000
                          bank_account_source:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 1
                              bank_name:
                                type: string
                                example: BCA
                              bank_account_number:
                                type: string
                                example: 12345678
                              balance:
                                type: integer
                                example: 1000000
                              user_id:
                                type: integer
                                example: 1
                          bank_account_destination:
                            type: object
                            properties:
                              id:
                                type: integer
                                example: 2
                              bank_name:
                                type: string
                                example: BNI
                              bank_account_number:
                                type: string
                                example: 87654321
                              balance:
                                type: integer
                                example: 2000000
                              user_id:
                                type: integer
                                example: 2
        '404':
          description: Transaction Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Transaction not found
  /auth/login:
    post:
      summary: Login
      tags: ["Auth"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: johndoe@gmail.com
                password:
                  type: string
                  example: 123
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Successfully login
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MTExLCJpYXQiOjE3MTM2MTI0NjQsImV4cCI6MTcxMzY5ODg2NH0.ytw9lYmH7LRGf3Q1825j0VU9kBlnww9BCb6LBavScHQ
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Invalid Email or Password
        '400':
          description: Invalid Arguments
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: All fields are required
  /auth/register:
    post:
      summary: Register
      tags: ["Auth"]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John Doe
                email:
                  type: string
                  example: johndoe@gmail.com
                password:
                  type: string
                  example: 123
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Successfully register for john doe
        '400':
          description: Invalid Arguments
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: All fields are required
  /auth/authenticate:
    get:
      summary: Authenticate
      tags: ["Auth"]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  message:
                    type: string
                    example: Successfully authenticate
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: error
                  message:
                    type: string
                    example: Unauthorized
